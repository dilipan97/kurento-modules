/* Autogenerated with kurento-module-creator */

#include <gst/gst.h>
#include "MediaPipeline.hpp"
#include "MediaPipelineImpl.hpp"
#include <RtmpToRtspEndpointImplFactory.hpp>
#include "RtmpToRtspEndpointImpl.hpp"
#include <jsonrpc/JsonSerializer.hpp>
#include <KurentoException.hpp>
#include "SignalHandler.hpp"

#define GST_CAT_DEFAULT kurento_rtmp_to_rtsp_endpoint_impl
GST_DEBUG_CATEGORY_STATIC (GST_CAT_DEFAULT);
#define GST_DEFAULT_NAME "KurentoRtmpToRtspEndpointImpl"
#define FACTORY_NAME "rtmptortspendpoint"

#define SET_RTMP_URI "rtmp-uri"
#define SET_RTSP_PORT "rtsp-port"

namespace kurento
{
namespace module
{
namespace rtmptortspendpoint
{

RtmpToRtspEndpointImpl::RtmpToRtspEndpointImpl (const boost::property_tree::ptree &config,
                                                std::shared_ptr<MediaPipeline> mediaPipeline,
                                                const std::string &rtmpUri, int port)
    : FilterImpl (config, std::dynamic_pointer_cast<MediaPipelineImpl> (mediaPipeline) )
{
  GstElement* rtmpPlugin;

  g_object_set (element, "filter-factory", FACTORY_NAME, NULL);

  g_object_get (G_OBJECT (element), "filter", &rtmpPlugin, NULL);

  if (rtmpPlugin == NULL) {
    throw KurentoException (MEDIA_OBJECT_NOT_AVAILABLE,
                            "Media Object not available");
  }

  if(rtmpUri != "") {
    g_object_set(G_OBJECT (rtmpPlugin), SET_RTMP_URI, rtmpUri.c_str(), NULL);
  }

  if(port != 0) {
    g_object_set(G_OBJECT (rtmpPlugin), SET_RTSP_PORT, port, NULL);
  }

  g_object_unref (rtmpPlugin);
}

MediaObjectImpl *
RtmpToRtspEndpointImplFactory::createObject (const boost::property_tree::ptree &config,
                                             std::shared_ptr<MediaPipeline> mediaPipeline,
                                             const std::string &rtmpUri, int port) const
{
  return new RtmpToRtspEndpointImpl (config, mediaPipeline, rtmpUri, port);
}

RtmpToRtspEndpointImpl::StaticConstructor RtmpToRtspEndpointImpl::staticConstructor;

RtmpToRtspEndpointImpl::StaticConstructor::StaticConstructor()
{
  GST_DEBUG_CATEGORY_INIT (GST_CAT_DEFAULT, GST_DEFAULT_NAME, 0,
                           GST_DEFAULT_NAME);
}

} /* rtmptortspendpoint */
} /* module */
} /* kurento */
