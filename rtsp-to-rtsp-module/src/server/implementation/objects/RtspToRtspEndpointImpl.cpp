/* Autogenerated with kurento-module-creator */

#include <gst/gst.h>
#include "MediaPipeline.hpp"
#include "MediaPipelineImpl.hpp"
#include <RtspToRtspEndpointImplFactory.hpp>
#include "RtspToRtspEndpointImpl.hpp"
#include <jsonrpc/JsonSerializer.hpp>
#include <KurentoException.hpp>
#include "SignalHandler.hpp"

#define GST_CAT_DEFAULT kurento_rtsp_to_rtsp_endpoint_impl
GST_DEBUG_CATEGORY_STATIC (GST_CAT_DEFAULT);
#define GST_DEFAULT_NAME "KurentoRtspToRtspEndpointImpl"
#define FACTORY_NAME "rtsptortspendpoint"

#define SET_IPCAMERA_URI "ipcamera-uri"
#define SET_RTP_PORT "rtsp-port"

namespace kurento
{
namespace module
{
namespace rtsptortspendpoint
{

RtspToRtspEndpointImpl::RtspToRtspEndpointImpl (const boost::property_tree::ptree &config,
                                                std::shared_ptr<MediaPipeline> mediaPipeline,
                                                const std::string &ipcamUri, int port)
    : FilterImpl (config, std::dynamic_pointer_cast<MediaPipelineImpl> (mediaPipeline) )
{
    GstElement* rtspPlugin;

    g_object_set (element, "filter-factory", FACTORY_NAME, NULL);

    g_object_get (G_OBJECT (element), "filter", &rtspPlugin, NULL);

    if (rtspPlugin == NULL) {
        throw KurentoException (MEDIA_OBJECT_NOT_AVAILABLE,
                                "Media Object not available");
    }

    if(ipcamUri != "") {
        g_object_set(G_OBJECT (rtspPlugin), SET_IPCAMERA_URI, ipcamUri.c_str(), NULL);
    }

    if(port != 0) {
        g_object_set(G_OBJECT (rtspPlugin), SET_RTP_PORT, port, NULL);
    }

    g_object_unref (rtspPlugin);
}

MediaObjectImpl *
RtspToRtspEndpointImplFactory::createObject (const boost::property_tree::ptree &config,
                                             std::shared_ptr<MediaPipeline> mediaPipeline,
                                             const std::string &ipcamUri, int port) const
{
  return new RtspToRtspEndpointImpl (config, mediaPipeline, ipcamUri, port);
}

RtspToRtspEndpointImpl::StaticConstructor RtspToRtspEndpointImpl::staticConstructor;

RtspToRtspEndpointImpl::StaticConstructor::StaticConstructor()
{
  GST_DEBUG_CATEGORY_INIT (GST_CAT_DEFAULT, GST_DEFAULT_NAME, 0,
                           GST_DEFAULT_NAME);
}

} /* rtsptortspendpoint */
} /* module */
} /* kurento */
